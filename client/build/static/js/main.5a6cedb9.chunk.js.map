{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/API.js","components/Form/index.js","pages/NewUser.js","components/Chat/index.js","components/List/index.js","pages/Gyms.js","ProtectedRoute.js","context/auth.js","components/Nav/index.js","components/Buttons/SaveBtn.js","components/Buttons/DeleteBtn.js","components/Card/index.js","pages/Users.js","pages/LogIn.js","AuthenticatedRoute.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Col","_ref","size","children","react_default","a","createElement","className","split","map","join","Container","fluid","concat","Row","Jumbotron","NoMatch","components_Jumbotron","role","aria-label","API","getMovements","axios","get","getGymUsers","gym","saveMessage","messageData","put","getWOD","workoutData","console","log","createdBy","date","submitScore","id","_id","getWorkouts","deleteWOD","userData","deleteWorkout","delete","saveWorkoutsByUser","post","scores","userName","getUsers","getUser","checkPassword","password","createUser","getPrograms","getCrossFitWOD","Input","props","Object","assign","name","FormBtn","Dropdown","Option","value","LogIn","state","users","programs","firstName","lastName","dateOfBirth","weight","program","handleInputChange","event","_event$target","target","_this","setState","defineProperty","handleFormSubmit","preventDefault","findIndex","element","then","res","window","location","catch","err","alert","_this2","this","data","onChange","placeholder","type","selected","disabled","key","onClick","Component","React","List","ListItem","_ref2","Gym","members","workouts","messages","newMessage","loadUsers","isAuthenticated","JSON","parse","localStorage","getItem","user","i","length","sort","b","workoutType","score","wod","sendNewMessage","messageObject","message","Date","toString","getRoundLength","array","roundLength","parseInt","reps","changeWODDate","newDate","moment","format","match","params","_React$createElement","react_datepicker_min_default","rounds","movements","movement","movementType","Math","floor","updateNewMessage","ProtectedRoute","userLink","pathname","react_router","exact","path","component","to","redirect","AuthContext","createContext","Nav","gymLink","href","src","style","height","title","react_router_dom","clear","SaveBtn","tabIndex","float","DeleteBtn","marginLeft","Card","alt","image","User","userInfo","movementName","movementArray","repsArray","weightsArray","minutes","seconds","loadUser","stats","age","diff","toFixed","wodDate","CrossFitWOD","addMovement","push","handleMovementChange","_this$setState2","index","_event$target2","forEach","scoreId","rawScore","changeDate","countWorkout","sumMinutes","roundsArray","j","components_Card","margin","build","limit","color","fill","item","SaveBtn_SaveBtn","class","workout","status","setItem","stringify","AuthenticatedRoute","Footer","App","existingTokens","Provider","components_Nav","src_AuthenticatedRoute","NewUser","src_ProtectedRoute","pages_NoMatch","components_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5a6cedb9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\nimport \"./style.css\"\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport \"./style.css\";\n\nfunction NoMatch() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12\">\n                    <Jumbotron>\n                        <h1>404 Page Not Found</h1>\n                        <h1>\n                            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                                🙄\n              </span>\n                        </h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default NoMatch;\n","import axios from \"axios\";\n\nexport default {\n\n  getMovements: function () {\n    return axios.get(\"/api/movements\");\n  },\n  getGymUsers: function (gym) {\n    return axios.get(\"/api/programs/\"+gym);\n  },\n  saveMessage: function (gym,messageData) {\n    return axios.put(\"/api/programs/\"+gym,messageData)\n  },\n  getWOD: function (workoutData) {\n    console.log(workoutData)\n    return axios.get(\"/api/workouts/\"+workoutData.createdBy+\"/\"+ workoutData.date)\n\n  },\n  submitScore: function (id,workoutData) {\n    return axios.put(\"/api/workouts/\"+id._id,workoutData)\n  },\n  getWorkouts: function (id) {\n    return axios.get(\"/api/workouts/\" + id);\n  },\n  deleteWOD: function(id, userData) {\n    console.log(id)\n    return axios.put(\"/api/users/\" + id, userData);\n  },\n  deleteWorkout: function (id) {\n    return axios.delete(\"/api/workouts/\" + id);\n  },\n  saveWorkoutsByUser: function (workoutData) {\n    return axios.post(\"/api/workouts/\" + workoutData.scores.userName, workoutData);\n  },\n  getUsers: function () {\n    return axios.get(\"/api/users\")\n  },\n  getUser: function (userName) {\n    return axios.get(\"/api/users/\" + userName);\n  },\n  checkPassword: function (userData) {\n    return axios.get(\"/api/users/\" + userData.userName + \"/\" + userData.password);\n  },\n  createUser: function (userData) {\n    return axios.post(\"/api/users\", userData)\n  },\n  getPrograms() {\n    return axios.get(\"api/programs\")\n  },\n  getCrossFitWOD(date) {\n    console.log(date);\n    return axios.get(\"/scrape/\" + date )\n     }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n      <input className=\"form-control\" id={props.name} {...props} />\n    \n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props}>\n      {props.children}\n    </button>\n  );\n}\n\nexport function Dropdown(props) {\n  return (\n      <select className=\"custom-select\" id={props.name} {...props}>\n      </select>\n  )\n}\n\nexport function Option(props) {\n  return (<option id={props.name} value={props.name}>{props.name}</option>\n  )\n}","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn, Dropdown, Option } from \"../components/Form\";\nimport \"./style.css\";\n\n\nclass LogIn extends Component {\n    state = {\n        users: [],\n        programs: [],\n        firstName: \"\",\n        lastName: \"\",\n        userName: \"\",\n        password: \"\",\n        dateOfBirth: \"\",\n        weight: \"\",\n        program: \"\"\n    };\n    componentDidMount() {\n        API.getUsers().then(res => {\n            console.log(res.data)\n            this.setState({ users: res.data })\n            API.getPrograms().then(res => {\n                console.log(res.data)\n                this.setState({ programs: res.data })\n            })\n        })\n            .catch(err => console.log(err));\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(this.state.users)\n        if (this.state.users.findIndex(element => element.userName === this.state.userName) === -1) {\n            API.createUser({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                userName: this.state.userName,\n                password: this.state.password,\n                dateOfBirth: this.state.dateOfBirth,\n                weight: this.state.weight,\n                program: this.state.program\n            })\n                .then(res => window.location.assign(\"/\"))\n                .catch(err => console.log(err));\n        } else {\n            alert(\"that user name is already taken\")\n        }\n    };\n\n    render() {\n        return (\n           <div className=\"container\">\n                <Container fluid>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <Jumbotron>\n                                <h1>\n                                    New User Setup\n                        </h1>\n                            </Jumbotron>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"md-10 md-offset-1\">\n                            <form>\n                                <Input\n                                    className=\"user-input\"\n                                    value={this.state.firstName}\n                                    onChange={this.handleInputChange}\n                                    name=\"firstName\"\n                                    placeholder=\"First Name\"\n                                />\n                                <Input\n                                    className=\"user-input\"\n                                    value={this.state.lastName}\n                                    onChange={this.handleInputChange}\n                                    name=\"lastName\"\n                                    placeholder=\"Last Name\"\n                                />\n                                <Input\n                                    className=\"user-input\"\n                                    value={this.state.userName}\n                                    onChange={this.handleInputChange}\n                                    name=\"userName\"\n                                    placeholder=\"User Name\"\n                                />\n                                <Input\n                                    className=\"user-input\"\n                                    type=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.handleInputChange}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                                <Input\n                                    className=\"user-input\"\n                                    value={this.state.dateOfBirth}\n                                    onChange={this.handleInputChange}\n                                    name=\"dateOfBirth\"\n                                    placeholder=\"Date of Birth\"\n                                />\n                                <Input\n                                    className=\"user-input\"\n                                    value={this.state.weight}\n                                    onChange={this.handleInputChange}\n                                    name=\"weight\"\n                                    placeholder=\"weight\"\n                                />\n                                <Dropdown\n                                    className=\"user-input\"\n                                    value={this.state.program}\n                                    onChange={this.handleInputChange}\n                                    name=\"program\"\n                                    placeholder=\"Program\"\n                                >\n                                    <Option selected disabled value=\"\" name=\"Program\" />\n                                    {this.state.programs.map(program => (\n                                        <Option name={program.name} key={program._id} />\n                                    ))}\n                                </Dropdown>\n\n                                <FormBtn\n                                    className=\"login\"\n                                    disabled={!(this.state.userName && this.state.password && this.state.dateOfBirth && this.state.weight)}\n                                    onClick={this.handleFormSubmit}\n                                >\n                                    Create New User\n                            </FormBtn>\n                            </form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nexport default LogIn;\n","import React from \"react\";\nimport \"./style.css\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    const isAuthenticated = JSON.parse(localStorage.getItem(\"tokens\"))\n    this.state = {\n      user: isAuthenticated.userName,\n      chat: [],\n      newMessage: \"\",\n      chatIsOpen: false,\n    };\n  }\n  toggleChat = () => {\n    let newState = {...this.state};\n    newState.chatIsOpen = !newState.chatIsOpen;\n    console.log(newState);\n    this.setState(newState);\n  };\n  updateNewMessage = (event) => {\n    let newMessage = event.target.value;\n    this.setState({newMessage:newMessage});\n  };\n  sendNewMessage = () => {\n    let chat = this.state.chat\n    let messageObject = {\n      message: this.state.newMessage,\n      user: this.state.user,\n      date: new Date().toString(),\n    };\n    chat.push(messageObject);\n    this.setState({chat:chat,newMessage:\"\"});\n  };\n\n  render() {\n    return (\n      <div className=\"chatContainer\">\n        <div className=\"chat\" onClick={this.toggleChat}>Chat</div>\n        <div className={`chatbox ${this.state.chatIsOpen ? \"open\" : \"\"}`}>\n          <div className=\"chatMessages\">\n            {this.state.chat.map((item) => {\n              return (\n                <p>\n                  <span>{item.user}:&nbsp;</span>\n                  {item.message}\n                </p>\n              );\n            })}\n          </div>\n\n          <input\n            onChange={this.updateNewMessage}\n            value={this.state.newMessage}\n          />\n          <input type=\"button\" value=\"send\" onClick={this.sendNewMessage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import Chat from \"../components/Chat/index\";\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport {Col, Row, Container} from \"../components/Grid\";\nimport { Sparklines, SparklinesBars, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport \"./style.css\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { List, ListItem} from \"../components/List\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Gym extends Component {\n  state = {\n    gym: \"\",\n    members: [],\n    workouts: [],\n    messages: [],\n    newMessage: \"\"\n  };\n\n  componentDidMount() {\n    const gym = this.props.match.params.name;\n    const date = moment().format(\"YYYY-MM-DD\");\n    console.log(date);\n\n    this.setState({gym: gym, date: date});\n    this.loadUsers(gym);\n    this.getWOD(gym, date);\n  }\n\n  loadUsers = (gym) => {\n    API.getGymUsers(gym)\n      .then((res) => {\n        const isAuthenticated= JSON.parse(localStorage.getItem(\"tokens\"));\n        let user = {}\n        for (let i=0;i<res.data.users.length;i++) {\n          if (isAuthenticated.userName===res.data.users[i].userName) {\n            user = res.data.users[i]\n          }\n        }\n        if (!res.data.messages.length) {\n          res.data.messages.sort((a, b) => a.date - b.date);\n        }\n        this.setState({\n          messages: res.data.messages,\n          members: res.data.users,\n          user: user\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  getWOD = (gym, date) => {\n    console.log(date);\n    API.getWOD({createdBy: gym, date: date})\n    .then((res) => {\n      if (!(res.data === null)) {\n        if (res.data.workoutType === \"For Time\") {\n          res.data.scores.sort((a, b) => a.score - b.score);\n        } else {\n          res.data.scores.sort((a, b) => b.score - a.score);\n        }\n      }\n      this.setState({\n        wod: res.data,\n      });\n    });\n  };\n  handleInputChange = (event) => {\n    const {name, value} = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  sendNewMessage = () => {\n    let messageObject = {\n      message: this.state.newMessage,\n      userName: this.state.user.userName,\n      firstName: this.state.user.firstName,\n      lastName: this.state.user.lastName,\n      date: new Date().toString(),\n    };\n    this.setState({newMessage:\"\"})\n    API.saveMessage(this.state.gym,messageObject).then(res =>this.loadUsers(this.state.gym))\n  };\n  getRoundLength = (array) => {\n    var roundLength = 0;\n    for (let i = 0; i < array.length; i++) {\n      roundLength += parseInt(array[i].reps);\n    }\n    return roundLength;\n  };\n  changeWODDate = (date) => {\n    const newDate = moment(date, \"YYYY-MM-DDTHH:mm\").format(\"YYYY-MM-DD\");\n    this.setState({date: newDate});\n    this.getWOD(this.state.gym, newDate);\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        \n        <Container fluid>\n          <Row>\n      \n            <Col size=\"md-4\">\n              <div id=\"wod\">\n                <h5>\n                  {this.state.gym}'s Workout of the Day: {this.state.date}\n                </h5>\n                <hr></hr>\n                <div>\n                  Change WOD Date:\n                  <DatePicker\n                    className=\"datepicker\"\n                    onChange={this.changeWODDate}\n                  />\n                </div>\n                <hr></hr>\n\n                {this.state.wod ? (\n                  <div className=\"div-wod-score\">\n                    {this.state.wod.workoutType} {this.state.wod.rounds} Rounds\n                    {this.state.wod.movements.map((movement) => (\n                      <p key={movement._id}>\n                        {movement.reps}{\" \"}\n                        {movement.movementType === \"cardio\" ? \"m\" : \"x\"}{\" \"}\n                        {movement.name}{\" \"}\n                        {movement.movementType === \"weight\"\n                          ? `at ${movement.weight} lbs`\n                          : \"\"}\n                        {movement.movementType === \"to height\"\n                          ? `at ${movement.weight} inches`\n                          : \"\"}\n                      </p>\n                    ))}\n                  </div>\n                ) : (\n                  <h6>There is no workout for: {this.state.date}</h6>\n                )}\n              </div>\n            </Col>\n            <Col size=\"md-4\">\n              <div id=\"scores\">\n                <h5>WOD Scores:</h5>\n                <hr></hr>\n                {this.state.wod ? (\n                  <div>\n                    {this.state.wod.scores.map((score) => (\n                      <Row>\n                        <Col size=\"md-6\">\n                          {score.firstName} {score.lastName}\n                        </Col>\n                        <Col size=\"md-6\">\n                          {this.state.wod.workoutType === \"For Time\" ? (\n                            <p>\n                              Time: {Math.floor(score.score / 60)}:\n                              {(score.score % 60) < 10 ? \"0\" + score.score % 60 : score.score % 60}\n                            </p>\n                          ) : (\n                            \"\"\n                          )}\n                          {this.state.wod.workoutType === \"AMRAP\" ? (\n                            <p>\n                              Score:{\" \"}\n                              {Math.floor(\n                                score.score /\n                                  this.getRoundLength(this.state.wod.movements)\n                              )}{\" \"}\n                              Rounds +{\" \"}\n                              {score.score %\n                                this.getRoundLength(\n                                  this.state.wod.movements\n                                )}{\" \"}\n                              Reps\n                            </p>\n                          ) : (\n                            \"\"\n                          )}\n                        </Col>\n                      </Row>\n                    ))}{\" \"}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </Col>\n            <Col size=\"md-4\">\n              <div id=\"members\">\n                <h5>Message Board:</h5>\n                <hr></hr>\n                {this.state.messages ? (\n                  <List>\n                    {this.state.messages.map(message =>(\n                      <ListItem >\n                        <span>{message.firstName} {message.lastName}: {message.message} <p className=\"float-right\">{moment(message.date, \"YYYY-MM-DDTHH:mm\").format(\"MM/DD HH:mm\")}</p></span>\n                      </ListItem>\n                    ))}\n                  </List>\n                ):(\"\")}\n                <div>\n                <Input\n                  onChange={this.updateNewMessage}\n                  value={this.state.newMessage}\n                  onChange={this.handleInputChange}\n                  name=\"newMessage\"\n                />\n                <FormBtn className=\"submit\" type=\"button\" value=\"send\" onClick={this.sendNewMessage}>\n                Post Message</FormBtn>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nfunction ProtectedRoute(props) {\n    const isAuthenticated = JSON.parse(localStorage.getItem(\"tokens\"));\n    const userLink = \"/users/\"+isAuthenticated.userName\n    \n    return (\n        <div>\n            {window.location.pathname===userLink ? (\n                <Route exact path={props.path} component={props.component} />\n            ) : (\n                    <Redirect to={props.redirect} />\n                )\n\n\n            };\n        </div>\n\n\n    )\n\n}\nexport default ProtectedRoute;","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}","import React from \"react\";\nimport \"./style.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav(props) {\n  const logout = () => {\n    localStorage.clear();\n    window.location.assign(\"/\");\n  };\n  const isAuthenticated = JSON.parse(localStorage.getItem(\"tokens\"));\n  if (isAuthenticated) {\n    var userLink = \"/users/\" + isAuthenticated.userName\n    var gymLink = \"/gyms/\" + isAuthenticated.gym\n  }\n \n  return (\n  \n    <header className=\"navbar navbar-expand-lg flex-column flex-md-row\">\n      <a className=\"navbar-brand mr-0 mr-md-2\" href=\"/\"><img src=\"https://img.icons8.com/ios-filled/150/ffffff/deadlift.png\" style={{height:80}} />{props.title} </a>\n      FITNESS TRAINER {userLink && gymLink ? (\n        \n        <ul className=\"navbar-nav ml-md-auto\" >\n           \n          <li className=\"nav-item\">\n            <Link \n              to={\"/users/\" + isAuthenticated.userName} className={window.location.pathname === userLink ? \"nav-link active\" : \"nav-link\"}>\n              Home\n              <i className=\"material-icons\">home</i>\n        </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to={\"/gyms/\" + isAuthenticated.gym}\n              className={window.location.pathname === gymLink ? \"nav-link active\" : \"nav-link\"}\n            >\n              {isAuthenticated.gym} \n              <i className=\"material-icons\">fitness_center</i>\n        </Link>\n          </li>\n          <li className=\"nav-item\">\n              \n            <Link \n            to={\"/users/\" + isAuthenticated.userName} className={window.location.pathname === userLink ? \"nav-link active\" : \"nav-link\"}\n            className=\"nav-link\" onClick={() => logout()}>Log Out<i className=\"material-icons\">login</i> </Link>\n          </li>\n        </ul>\n      ):(\"\")}\n      \n\n\n    </header>\n  );\n}\n\n\nexport default Nav;\n","import React from \"react\";\nimport \"./SaveBtn.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nexport function SaveBtn(props) {\n    return (\n        <span {...props} role=\"button\" tabIndex=\"0\" style={{float:\"right\"}}>\n            Add Movement<i className=\"material-icons\">queue</i>\n        </span>\n    );\n}\n\n\n","import React from \"react\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nexport function DeleteBtn(props) {\n  return (\n    <span className=\"btn btn-primary\" style={{ marginLeft:10}} {...props}  role=\"button\" tabIndex=\"0\">\n    </span>\n  );\n}\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"profile-picture col\" role=\"img\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SaveBtn } from \"../components/Buttons/SaveBtn\"\nimport { DeleteBtn } from \"../components/Buttons/DeleteBtn\"\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Sparklines, SparklinesBars, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport Card from \"../components/Card\"\nimport { List } from \"../components/List\";\nimport { Input, FormBtn, Dropdown, Option } from \"../components/Form\";\nimport \"./style.css\";\nimport moment, { now } from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Aggregate, get } from \"mongoose\";\n\n\nclass User extends Component {\n    state = {\n        userInfo: {},\n        workouts: [],\n        movements: [],\n        workoutType: \"\",\n        rounds: \"\",\n        movementName: \"\",\n        reps: \"\",\n        weight: \"\",\n        movementType: \"\",\n        movementArray: [],\n        repsArray: [],\n        weightsArray: [],\n        minutes: \"\",\n        seconds: \"\"\n    };\n\n    componentDidMount() {\n        const userName = this.props.match.params.name\n        this.getMovements()\n        this.loadUser(userName)\n    }\n    getWOD = (gym, date) => {\n        API.getWOD({ createdBy: gym, date: date })\n            .then(res => {\n\n                this.setState({\n                    wod: res.data\n                })\n            })\n    }\n    getMovements = () => {\n        API.getMovements()\n            .then(res => {\n                this.setState({ movements: res.data })\n            })\n            .catch(err => console.log(err));\n    }\n    loadUser = userName => {\n        API.getUser(userName)\n            .then(res => {\n\n                const stats = this.stats(res.data.workouts, res.data.userName)\n\n                this.setState({\n                    userInfo: res.data, workouts: res.data.workouts, workoutType: \"\",\n                    dateOfBirth: moment(res.data.dateOfBirth, \"YYYY-MM-DDTHH:mm\").format(\"MM/DD/YYYY\"),\n                    age: moment(Date()).diff(res.data.dateOfBirth, 'years', true).toFixed(0),\n                    rounds: \"\",\n                    movementName: \"\",\n                    reps: \"\",\n                    movementType: \"\",\n                    weight: \"\",\n                    minutes: \"\",\n                    seconds: \"\",\n                    stats: stats,\n                })\n                const date = moment().format(\"YYYY-MM-DD\")\n                this.setState({ wodDate: date })\n                this.getWOD(this.state.userInfo.program, date)\n                this.getCrossFitWOD(moment(date, \"YYYY-MM-DD\").format('YYMMDD'));\n            })\n            .catch(err => console.log(err));\n    }\n    getCrossFitWOD = date => {\n        API.getCrossFitWOD(date).then(res => {\n            console.log(res.data);\n            this.setState({ CrossFitWOD: res.data });\n        })\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    addMovement = () => {\n        if (this.state.movementName && this.state.reps) {\n            const movement = { name: this.state.movementName, reps: this.state.reps, weight: this.state.weight, movementType: this.state.movementType }\n            const movementArray = this.state.movementArray\n            movementArray.push(movement)\n            console.log(movementArray)\n            this.setState({ movementArray: movementArray, movementName: \"\", reps: \"\", weight: \"\", movementType: \"\" })\n        }\n    }\n    handleMovementChange = event => {\n        console.log(this.state.movements)\n        const { name, value } = event.target;\n        let index;\n        this.state.movements.forEach((movement, i) => {\n            if (movement.name === value) {\n                index = i\n            }\n        })\n        const movementType = this.state.movements[index].type\n        console.log(index)\n        console.log(movementType)\n        this.setState({\n            [name]: value,\n            movementType: movementType\n        });\n    };\n\n    deleteWorkout = (id, createdBy, scoreId) => {\n        console.log(createdBy)\n        if (createdBy === this.state.userInfo.userName) {\n            API.deleteWorkout(id)\n                .then(res => this.loadUser(this.state.userInfo.userName))\n                .catch(err => console.log(err));\n        } else {\n            API.deleteWOD(id, { userName: this.state.userInfo.userName, _id: scoreId })\n                .then(res => this.loadUser(this.state.userInfo.userName))\n                .catch(err => console.log(err));\n        }\n    };\n\n    getRoundLength = array => {\n        var roundLength = 0;\n        for (let i = 0; i < array.length; i++) {\n            roundLength += parseInt(array[i].reps)\n        }\n        return roundLength\n    }\n    handleFormSubmit = event => {\n        event.preventDefault();\n        let rawScore;\n        if (this.state.workoutType === \"For Time\") {\n            rawScore = parseInt(this.state.minutes) * 60 + parseInt(this.state.seconds);\n        } else {\n            let roundLength = this.getRoundLength(this.state.movementArray)\n            rawScore = parseInt(this.state.minutes) * roundLength + parseInt(this.state.seconds)\n        }\n        console.log(this.state.userInfo.userName)\n\n        API.saveWorkoutsByUser({\n            workoutType: this.state.workoutType,\n            rounds: this.state.rounds,\n            movements: this.state.movementArray,\n            scores: { userName: this.state.userInfo.userName, firstName: this.state.userInfo.firstName, lastName: this.state.userInfo.lastName, score: rawScore },\n            date: this.state.date,\n            createdBy: this.state.userInfo.userName\n        }\n        ).then(res => this.loadUser(this.state.userInfo.userName))\n            .catch(err => console.log(err));\n    }\n    changeDate = date => {\n        this.setState({ date })\n    }\n    changeWODDate = date => {\n        const newDate = moment(date, \"YYYY-MM-DDTHH:mm\").format(\"YYYY-MM-DD\")\n        this.setState({ wodDate: newDate })\n        this.getWOD(this.state.userInfo.program, newDate)\n        this.getCrossFitWOD(moment(newDate, \"YYYY-MM-DD\").format('YYMMDD'));\n    }\n    submitScore = event => {\n        event.preventDefault()\n        let rawScore;\n        if (this.state.wod.workoutType === \"For Time\") {\n            rawScore = parseInt(this.state.minutes) * 60 + parseInt(this.state.seconds);\n        } else {\n            let roundLength = this.getRoundLength(this.state.wod.movements)\n            rawScore = parseInt(this.state.minutes) * roundLength + parseInt(this.state.seconds)\n        }\n        API.submitScore({ _id: this.state.wod._id },\n            { scores: { userName: this.state.userInfo.userName, firstName: this.state.userInfo.firstName, lastName: this.state.userInfo.lastName, score: rawScore } }\n        ).then(res => this.loadUser(this.state.userInfo.userName))\n            .catch(err => console.log(err));\n    }\n\n    stats = (array, userName) => {\n        let countWorkout = array.length;\n        var sumMinutes = 0;\n        let stats = {};\n        var roundsArray = []\n        console.log(array);\n\n        for (let i = 0; i < array.length; i++) {\n\n            if (array[i].workoutType === \"AMRAP\") {\n\n                for (let j = 0; j < array[i].scores.length; j++) {\n\n                    if (array[i].scores[j].userName === userName) {\n                        sumMinutes += parseInt(array[i].rounds);\n                        roundsArray.push(parseInt(array[i].rounds))\n                        console.log(\"Total Minutes: \" + sumMinutes);\n                    }\n                }\n            }\n            else {\n                for (let j = 0; j < array[i].scores.length; j++) {\n                    if (array[i].scores[j].userName === userName) {\n                        sumMinutes += parseInt(array[i].scores[j].score/60);\n                        roundsArray.push(parseInt(array[i].scores[j].score/60));\n                    }\n                }\n            }\n        } \n\n        stats = { countWorkout: countWorkout, sumMinutes: sumMinutes, rounds:roundsArray }\n        console.log(stats)\n        return stats;\n    }\n\n    render() {\n        return (\n            <div className=\"container container-fluid\">\n                <Container fluid>\n                    <Row className=\"container-fluid\">\n                        <Col size=\"md-4\" className=\"container-fluid\">\n                            <div id=\"user\" className=\"container-fluid\">\n                                <h5>{this.state.userInfo.firstName} {this.state.userInfo.lastName}</h5>\n                                <hr></hr>\n                                <Row>\n                                    <Col size=\"md-4\" >\n                                        <Card\n                                            style={{ margin: \"20px\" }}\n                                            image={this.state.userInfo.image ? this.state.userInfo.image : \"https://4.bp.blogspot.com/_CFGTjIBDv4o/Si08hun6XRI/AAAAAAAAAUg/j1ZqSvAmcIU/s280/Pumping+Iron.jpg\"}\n                                            name={this.state.userInfo.userName}\n                                        />\n                                    </Col>\n                                    <Col size=\"md-8\" style=\"float:right\">\n                                        <p>Age: {this.state.age}</p>\n                                        <p>Weight: {this.state.userInfo.weight}</p>\n                                        <p>Gym: {this.state.userInfo.program}</p>\n                                    </Col>\n                                </Row>\n                                <hr></hr>\n                                \n\n                                    {this.state.stats ? (\n\n                                    <Row>\n                                            <Col size=\"md-6\">\n                                                <p>Workouts: {this.state.stats.countWorkout}</p>\n                                                <p>Minutes:{this.state.stats.sumMinutes}</p>\n                                            </Col>\n                                            <Col size=\"md-6\" style=\"float:right\">\n                                                <Sparklines data={this.state.stats.rounds} limit={10} height={40}>\n                                                    <SparklinesLine color=\"blue\" fill=\"white\" />\n                                                    <SparklinesSpots />\n                                                </Sparklines>\n                                            </Col>\n                                          </Row>  \n                                    \n                                    ) : (\"\")\n                                    \n                                    }\n                               \n\n                            </div>\n                        </Col>\n\n                        <Col size=\"md-4\">\n                            <div id=\"wod\" >\n                                <h5>{this.state.userInfo.program}'s Workout of the Day</h5>\n                                <hr></hr>\n                                <div>\n                                    <div>Date:\n                                        <DatePicker\n                                            className=\"datepicker\"\n                                            onChange={this.changeWODDate}\n                                            name=\"select date\"\n                                        />\n                                    </div>\n                                </div>\n                                <hr></hr>\n\n                                {this.state.wod ? (\n                                    <div className=\"div-wod-score\">\n\n                                        <p>{moment(this.state.wod.date, \"YYYY-MM-DDTHH:mm\").format(\"MM/DD/YYYY\")}</p>\n                                        {this.state.wod.workoutType === \"For Time\"\n\n                                            ? <p>{this.state.wod.workoutType} {this.state.wod.rounds} Rounds</p>\n\n                                            : <p>{this.state.wod.workoutType} for {this.state.wod.rounds} minutes</p>}\n\n                                        {this.state.wod.movements.map(movement => (\n                                            <p>\n                                                {movement.reps} {movement.movementType === \"cardio\" ? \"m\" : \"x\"} {movement.name}  {movement.movementType === \"weight\" ? `at ${movement.weight} lbs` : \"\"}{movement.movementType === \"to height\" ? `at ${movement.weight} inches` : \"\"}\n                                            </p>\n                                        ))}\n\n                                        <div>\n\n                                            <hr></hr>\n\n                                            <div className=\"div-wod-score\">\n\n                                                <Row key={this.state.wod._id}>\n                                                    <p className=\"div-wod-title\">{this.state.wod.workoutType === \"For Time\" ? \"Time: \" : \"Score: \"}</p>\n\n                                                    <Input\n                                                        className=\"wod-score-input\"\n                                                        value={this.state.minutes}\n                                                        onChange={this.handleInputChange}\n                                                        name=\"minutes\"\n                                                        placeholder={this.state.wod.workoutType === \"For Time\" ? \"Minutes\" : \"Rounds\"}\n                                                    />\n\n                                                    <h5>{this.state.wod.workoutType === \"For Time\" ? \" : \" : \" + \"}</h5>\n                                                    <Input\n                                                        className=\"wod-score-input\"\n                                                        value={this.state.seconds}\n                                                        onChange={this.handleInputChange}\n                                                        name=\"seconds\"\n                                                        placeholder={this.state.wod.workoutType === \"For Time\" ? \"Seconds\" : \"Reps\"}\n                                                    />\n\n                                                    <div>\n                                                        <FormBtn\n                                                            className=\"submit\"\n                                                            disabled={!(this.state.seconds && this.state.minutes)}\n                                                            onClick={this.submitScore}\n                                                        >Submit Score\n                                                        </FormBtn>\n                                                    </div>\n\n                                                </Row>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                ) : (\"\")}\n\n                                \n                                {this.state.CrossFitWOD && !this.state.wod ? (\n                                    <div>\n                                    <h5>CrossFit's WOD for {this.state.wodDate}</h5>\n                                    <h6>{this.state.CrossFitWOD.map(item => (\n\n                                        <p>{item}</p>\n                                    ))}</h6>\n                                    </div>) : (\"\")}\n                                \n                            </div>\n                        </Col>\n\n                        <Col size=\"md-4\">\n                            <div id=\"logworkout\">\n                                <h5>Log a Workout </h5>\n                                <hr></hr>\n                                <div>Date:\n                                                <DatePicker\n                                        className=\"datepicker\"\n                                        selected={this.state.date}\n                                        onChange={this.changeDate}\n                                    />\n                                </div>\n                                <hr></hr>\n\n                                <form id=\"log-workouts\">\n                                    <Row>\n                                        <Dropdown className=\"dropdown\"\n                                            value={this.state.workoutType}\n                                            onChange={this.handleInputChange}\n                                            name=\"workoutType\"\n                                            placeholder=\"Workout\"\n                                        >\n                                            <Option selected disabled value=\"\" name=\"Workout Type\" />\n                                            <Option name=\"For Time\" />\n                                            <Option name=\"AMRAP\" />\n                                        </Dropdown>\n                                    </Row>\n\n                                    {this.state.workoutType ? (\n\n                                        <div className=\"log-workouts\">\n\n                                            <Row>\n                                                <Input className=\"wod-score-input\"\n                                                    value={this.state.rounds}\n                                                    onChange={this.handleInputChange}\n                                                    name=\"rounds\"\n                                                    placeholder={this.state.workoutType === \"For Time\" ? \"Rounds: \" : \"Time\"}\n                                                />\n                                                {this.state.workoutType === \"For Time\" ? \"Rounds\" : \"Minutes\"}\n                                            </Row>\n\n                                            {this.state.movementArray.length ? (\n                                                <List>\n\n                                                    {this.state.movementArray.map(movement => (\n                                                        <Row>\n                                                            <Col size=\"md-4\">\n                                                                <p>{movement.reps} {movement.movementType === \"cardio\" ? \"m\" : \"x\"} </p>\n                                                            </Col>\n                                                            <Col size=\"md-4\">\n                                                                <p>{movement.name}</p>\n                                                            </Col>\n                                                            {movement.movementType === \"weight\" || movement.movementType === \"to height\" ? (\n                                                                <Col size=\"md-4\">\n                                                                    {movement.movementType === \"weight\" ? <p>at {movement.weight} lbs</p> : <p>to {movement.weight} inches</p>}\n                                                                </Col>\n                                                            ) : (\"\")}\n                                                        </Row>\n                                                    ))}\n                                                </List>\n                                            ) : (\"\")}\n\n                                            <hr></hr>\n                                            <Row>\n                                                <Dropdown\n                                                    className=\"dropdown\"\n                                                    value={this.state.movementName}\n                                                    onChange={this.handleMovementChange}\n                                                    name=\"movementName\"\n                                                    placeholder=\"Movement\"\n                                                >\n                                                    <Option selected disabled value=\"\" name=\"Add Movement\" />\n                                                    {this.state.movements.map(movement => (\n                                                        <Option name={movement.name} key={movement._id} />\n                                                    ))}\n                                                </Dropdown>\n                                            </Row>\n\n                                            {this.state.movementName ? (\n                                                <Row>\n                                                    <Input className=\"wod-score-input\"\n                                                        value={this.state.reps}\n                                                        onChange={this.handleInputChange}\n                                                        name=\"reps\"\n                                                        placeholder={this.state.movementType === \"cardio\" ? \"Distance\" : \"Reps\"}\n                                                    />\n                                                    {this.state.movementType === \"weight\" || this.state.movementType === \"to height\" ? (\n                                                        <Input className=\"wod-score-input\"\n                                                            value={this.state.weight}\n                                                            onChange={this.handleInputChange}\n                                                            name=\"weight\"\n                                                            placeholder={this.state.movementType === \"weight\" ? \"Weight\" : \"Height\"}\n\n                                                        />\n                                                    ) : (\"\")}\n\n                                                    <Row>\n                                                        <SaveBtn class=\"submit-movement\"\n                                                            disabled={!(this.state.movementName && this.state.reps)}\n                                                            onClick={() => this.addMovement()} />\n                                                    </Row>\n\n                                                </Row>\n\n\n                                            ) : (\"\")}\n                                            <hr></hr>\n\n                                            <Row className=\"div-wod-score\">\n                                                <div className=\"div-wod-title\">{this.state.workoutType === \"For Time\" ? \"Time: \" : \"Score: \"}</div>\n                                                <Input className=\"wod-score-input\"\n                                                    value={this.state.minutes}\n                                                    onChange={this.handleInputChange}\n                                                    name=\"minutes\"\n                                                    placeholder={this.state.workoutType === \"For Time\" ? \"Minutes\" : \"Rounds\"}\n                                                />\n                                                <h6>{this.state.workout === \"For Time\" ? \" : \" : \" + \"}</h6>\n\n                                                <Input className=\"wod-score-input\"\n                                                    value={this.state.seconds}\n                                                    onChange={this.handleInputChange}\n                                                    name=\"seconds\"\n                                                    placeholder={this.state.workoutType === \"For Time\" ? \"Seconds\" : \"Reps\"}\n                                                />\n                                            </Row>\n\n                                            <FormBtn\n                                                className=\"logscore\"\n                                                disabled={!(this.state.workoutType && this.state.rounds && this.state.movementArray && this.state.minutes)}\n                                                onClick={this.handleFormSubmit}\n                                            >\n                                                Log Workout\n                                         </FormBtn>\n                                        </div>\n\n                                    ) : (\"\")}\n\n                                </form>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col size=\"md-12\">\n                            <div id=\"workouts\">\n                                <h5>Recent Workouts</h5>\n                                <hr></hr>\n                                <Row>\n\n                                    {this.state.workouts.length ? (\n\n\n                                        <table className=\"table-fluid\">\n\n\n                                            {this.state.workouts.map(workout => (\n\n                                                <Row key={workout._id} className=\"fluid\">\n\n                                                    <tbody>\n                                                        <tr className=\"fluid\">\n\n                                                            <td><span className=\"table-labels\">{moment(workout.date, \"YYYY-MM-DDTHH:mm\").format(\"MM/DD/YYYY\")}</span></td>\n\n                                                            <td>{workout.workoutType === \"AMRAP\" ? <p>{workout.workoutType} for {workout.rounds} minutes of: </p> : <p>{workout.workoutType} {workout.rounds} rounds of: </p>}\n                                                            </td>\n\n                                                            <td>\n                                                                {workout.movements.map((movement, i) => (\n\n                                                                    <span> {movement.reps} {movement.movementType === \"cardio\" ? \" m \" : \" x \"}\n                                                                        {movement.name}\n                                                                        {movement.movementType === \"weight\" ? ` at ${movement.weight} lbs` : \"\"}\n                                                                        {movement.movementType === \"to height\" ? ` at ${movement.weight} inches` : \"\"}\n                                                                        {(workout.movements.length - 1) === i ? \"\" : \",\"}\n                                                                    </span>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                {workout.scores.map(score =>\n                                                                    <span>\n                                                                        {score.userName === this.state.userInfo.userName && workout.workoutType === \"For Time\" ? (\n                                                                            <p className=\"score\"><span className=\"table-labels\">Time:</span>{Math.floor(score.score / 60)}:{(score.score % 60) < 10 ? \"0\" + score.score % 60 : score.score % 60}\n                                                                                <DeleteBtn class=\"btn btn-submit\" onClick={() => this.deleteWorkout(workout._id, workout.createdBy, score._id)}>Delete</DeleteBtn></p>) : (\"\")}\n\n\n                                                                        {score.userName === this.state.userInfo.userName && workout.workoutType === \"AMRAP\" ? (\n\n                                                                            <p className=\"score\"><span className=\"table-labels\">Score:</span> {Math.floor(score.score / this.getRoundLength(workout.movements))} Rounds + {score.score % this.getRoundLength(workout.movements)} Reps\n                                                                                <DeleteBtn class=\"btn btn-submit\" onClick={() => this.deleteWorkout(workout._id, workout.createdBy, score._id)}>Delete</DeleteBtn></p>) : (\"\")}\n                                                                    </span>\n\n                                                                )}\n                                                            </td>\n\n                                                        </tr>\n                                                    </tbody>\n                                                </Row>\n\n                                            ))}\n\n                                        </table>\n\n                                    ) : (\"\")}\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Container >\n            </div >\n        )\n    }\n};\n\nexport default User\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport \"./style.css\";\n\nclass LogIn extends Component {\n    state = {\n        userName: \"\",\n        password: \"\",\n    };\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    handleFormSubmit = event => {\n        event.preventDefault();\n        let userData={\n            userName:this.state.userName,\n            password:this.state.password\n        }\n        API.checkPassword(userData)\n            .then(res => {\n                if (res.status===200){\n                    localStorage.setItem(\"tokens\", JSON.stringify(\n                        {\n                            userName:res.data.userName,\n                            gym:res.data.program,\n                            dateOfBirth:res.data.dateOfBirth\n                        }\n                    ));\n                    window.location.assign(\"/users/\"+res.data.userName)\n                } else {\n                    alert(\"Incorrect user name or password\")\n                    this.setState(\n                        {userName: \"\",\n                        password: \"\"})\n                }\n            })\n            .catch(err => {\n                alert(\"Incorrect user name or password\")\n                this.setState(\n                 {\n                     userName: \"\",\n                     password: \"\"\n                 })\n            })\n\n    };\n    \n\n    render() {\n        return (\n            <div className= \"container\">\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                User Login\n                        </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12 md-offset-5\">\n                        <form>\n                            <Input\n                                className=\"user-input\"\n                                value={this.state.userName}\n                                onChange={this.handleInputChange}\n                                name=\"userName\"\n                                placeholder=\"User Name\"\n                            />\n                            <Input\n                                className=\"user-input\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleInputChange}\n                                name=\"password\"\n                                placeholder=\"Password\"\n                            />\n                            <FormBtn\n                                className=\"login\"\n                                disabled={!(this.state.userName && this.state.password)}\n                                onClick={this.handleFormSubmit}\n                            >\n                            Log In\n                            </FormBtn>\n                        </form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-3\">\n                        <Link to=\"/new-user\">← New User Sign Up</Link>\n                    </Col>\n                </Row>\n            </Container>\n            </div>\n        )\n    }\n}\n\nexport default LogIn;\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport User from \"./pages/Users\";\r\nimport LogIn from \"./pages/LogIn\";\r\n\r\nfunction AuthenticatedRoute(props) {\r\n    var isAuthenticated = JSON.parse(localStorage.getItem(\"tokens\"));\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthenticated ? (\r\n                <Route to={props.path} component={LogIn} />\r\n            ) : (\r\n                    <Redirect to = {\"/users/\"+isAuthenticated.userName} component={User} />\r\n                    \r\n                )\r\n\r\n\r\n            };\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default AuthenticatedRoute;","import React from \"react\";\nimport \"./style.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Footer() {\n  return (\n    <nav className=\"footer fa fa-copyright\">\n      <i className=\"material-icons\">copyright</i>\n        FITNESS TRAINER         \n    </nav>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport NoMatch from \"./pages/NoMatch\";\nimport NewUser from \"./pages/NewUser\";\nimport Gym from \"./pages/Gyms\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport {AuthContext} from \"./context/auth\";\nimport Nav from \"./components/Nav/index\";\n\nimport User from \"./pages/Users\";\nimport AuthenticatedRoute from \"./AuthenticatedRoute\";\n\nimport Footer from \"./components/Footer\";\n\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n  return (\n    <AuthContext.Provider value={existingTokens}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <AuthenticatedRoute exact path=\"/\" />\n            <Route exact path=\"/new-user\" component={NewUser} />\n\n            <Route exact path=\"/gyms/:name\" component={Gym}/>\n            <ProtectedRoute exact path=\"/users/:name\" redirect=\"/\" component={User}/>\n\n\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n          <Footer/>\n        </div>\n\n      </Router>\n    </AuthContext.Provider>\n    \n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n\n\n"],"sourceRoot":""}